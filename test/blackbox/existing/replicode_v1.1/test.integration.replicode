P1:(pgm
[]; tpl
   (ptn ref_val:(mk.val : position ::) |[]); no views can be passed with an object as a tpl arg.
   (ptn ref_t: |[]); put view data here, one by one (not in a set, as ptn 1st member must be anything but a set).
[]; input
   []; inputs
      (ptn m:(mk.val ref_val.object position value: [: ijt: ::] ::) []
         (> ijt ref_t)
         (<> value ref_val.value)
         v#view:(fvw m stdin)
      )
   |[]; timing
   |[]; guards
[]; prods
   (inj [(mk.last_known m |[] |[] |[] 0) [|nb now 1 4 nil nil]]); builds L.
   (inj [(ins P1 [m ijt]) [|nb now 1 forever stdin nil]]); instantiates P1 with m as actual template arguments.
   (set [this.vw.res 0]); kills the original ipgm.
   (mod [v.sln -0.5]); just for quick testing; shall not be there!
1000000us; tsc
0; nfr
|[]; view
|[]; mks
|[]; vws
0; psln_thr
)

|[]

P2:(pgm
[]; tpl
   (ptn ref_b:(ent ::) |[])
[]; input
   []; inputs
      (ptn m:(mk.val o: position : [: ijt: ::] ::) []
         (<> o ref_b)]
   |[]; timings
   |[]; guards
[]; productions
   (inj [(ins P1 [m ijt]) [|nb now 1 4 stdin nil]])
   (inj [(ins P2 [m.object]) [|nb now 1 4 stdin nil]])
1000000us; tsc
0; nfr
|[]; view
|[]; mks
|[]; vws
0; psln_thr
)

|[]

iP2:(ipgm
P2; code
[nil]; args
|[]; view
|[]; mks
|[]; vws
0; psln_thr
)

[]
   [now 1 3 stdin nil 1]

P3:(pgm
|[]
[]
   []
      (ptn l:(mk.last_known ::) |[])
   |[]
   |[]
[]
   (eje [l l.vw 0])
100000us
0
|[]
|[]
|[]
0
)

|[]

iP3:(ipgm
P3
|[]
|[]
|[]
|[]
0
)

[]
   [now 1 forever stdin nil 1]

P4:(pgm
|[]
[]
   []
      (ptn m:(mk.val : position v:(vec3 ::) ::) |[])
   |[]
   |[]
[]
   (inj [(mk.val m.object position (vec3 (+ v.x 1) v.y v.z) |[] |[] |[] 0) [(+ m.vw.ijt 1000000us) m.vw.sln m.vw.res m.vw.grp m.vw.org] 0])
100000us
0
|[]
|[]
|[]
0
)

|[]

iP4:(ipgm
P4
|[]
|[]
|[]
|[]
0
)

[]
   [now 1 forever stdin nil 1]

O1:(mk.val
self
position
(vec3 3 3 3)
|[]
|[]
|[]
0
)

[]
   [now 1 5 stdin nil]

Tag:(mk.tag
self
"a test string"
|[]
|[]
|[]
0
)

[]
   [now 1 5 stdin nil]
